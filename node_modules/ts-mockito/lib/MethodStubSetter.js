"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ReturnValueMethodStub_1 = require("./stub/ReturnValueMethodStub");
var ThrowErrorMethodStub_1 = require("./stub/ThrowErrorMethodStub");
var CallFunctionMethodStub_1 = require("./stub/CallFunctionMethodStub");
var MethodStubSetter = (function () {
    function MethodStubSetter(methodToStub) {
        this.methodToStub = methodToStub;
        this.groupIndex = ++MethodStubSetter.globalGroupIndex;
    }
    MethodStubSetter.prototype.thenReturn = function () {
        var rest = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            rest[_i] = arguments[_i];
        }
        for (var _a = 0, rest_1 = rest; _a < rest_1.length; _a++) {
            var value = rest_1[_a];
            this.methodToStub.methodStubCollection.add(new ReturnValueMethodStub_1.ReturnValueMethodStub(this.groupIndex, this.methodToStub.matchers, value));
        }
        return this;
    };
    MethodStubSetter.prototype.thenThrow = function () {
        var rest = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            rest[_i] = arguments[_i];
        }
        for (var _a = 0, rest_2 = rest; _a < rest_2.length; _a++) {
            var error = rest_2[_a];
            this.methodToStub.methodStubCollection.add(new ThrowErrorMethodStub_1.ThrowErrorMethodStub(this.groupIndex, this.methodToStub.matchers, error));
        }
        return this;
    };
    MethodStubSetter.prototype.thenCall = function (func) {
        this.methodToStub.methodStubCollection.add(new CallFunctionMethodStub_1.CallFunctionMethodStub(this.groupIndex, this.methodToStub.matchers, func));
        return this;
    };
    return MethodStubSetter;
}());
MethodStubSetter.globalGroupIndex = 0;
exports.MethodStubSetter = MethodStubSetter;
//# sourceMappingURL=MethodStubSetter.js.map